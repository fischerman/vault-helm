# Deployment for the injector
{{ template "vault.mode" . }}
{{- if and (ne .mode "") (and ((eq (.Values.global.enabled | toString) "true") (eq (.Values.injector.enabled | toString) "true")))}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "vault.fullname" . }}-injector
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "vault.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "vault.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      component: injector
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "vault.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        component: injector
    spec:
      serviceAccountName: "{{ template "vault.fullname" . }}-injector"
      containers:
        - name: sidecar-injector
          image: "{{ .Values.injector.image }}"
          imagePullPolicy: IfNotPresent
          env:
            - name: AGENT_INJECT_LISTEN
              value: ":8080"
            - name: AGENT_INJECT_LOG_LEVEL
              value: {{ .Values.injector.logLevel | default "info" }}
            - name: AGENT_INJECT_VAULT_ADDR
              value: {{ include "vault.scheme" . }}://{{ template "vault.fullname" . }}.{{ .Release.Namespace }}.svc:{{ .Values.server.service.port }}
            - name: AGENT_INJECT_VAULT_IMAGE
              value: "{{ .Values.injector.vaultAgentImage }}"
            {{- if .Values.injector.tls.secretName }}
            - name: AGENT_INJECT_CERT_FILE
              value: "/etc/webhook/certs/{{ .Values.injector.tls.certName }}"
            - name: AGENT_INJECT_KEY_FILE
              value: "/etc/webhook/certs/{{ .Values.injector.tls.keyName }}"
            {{- else }}
            - name: AGENT_INJECT_TLS_AUTO
              value: {{ template "vault.fullname" . }}-agent-injector-cfg
            - name: AGENT_INJECT_TLS_AUTO_HOSTS
              value: {{ template "vault.fullname" . }}-agent-injector-svc,{{ template "vault.fullname" . }}-agent-injector-svc.{{ .Release.Namespace }},{{ template "vault.fullname" . }}-agent-injector-svc.{{ .Release.Namespace }}.svc
            {{- end }}
          args:
            - agent-inject
            - 2>&1
{{- if .Values.injector.tls.secretName }}
          volumeMounts:
            - name: webhook-certs
              mountPath: /etc/webhook/certs
              readOnly: true
      volumes:
        - name: webhook-certs
          secret:
            secretName: "{{ .Values.injector.tls.secretName }}"
{{- end }}
{{ end }}
